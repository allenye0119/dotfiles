" Vundle
set nocompatible
filetype off

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'VundleVim/Vundle.vim'
Plugin 'ryanoasis/vim-devicons'
Plugin 'terryma/vim-multiple-cursors'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'edkolev/tmuxline.vim'
Plugin 'kien/ctrlp.vim'
Plugin 'scrooloose/nerdtree'
Plugin 'xuyuanp/nerdtree-git-plugin'
Plugin 'majutsushi/tagbar'
Plugin 'scrooloose/syntastic'
Plugin 'Townk/vim-autoclose'
Plugin 'scrooloose/nerdcommenter'
Plugin 'sirver/ultisnips'
Plugin 'elzr/vim-json'
Plugin 'easymotion/vim-easymotion'
Plugin 'junegunn/vim-easy-align'
Plugin 'danro/rename.vim'
Plugin 'wikitopian/hardmode'
Plugin 'pangloss/vim-javascript'

call vundle#end()
filetype plugin indent on

let mapleader=','

" nerdcommenter
inoremap <silent> <leader>c <esc>:call NERDComment(0,"toggle")<CR>i
noremap <silent> <leader>c :call NERDComment(0,"toggle")<CR>

" nerdtree
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif
map <C-n> :NERDTreeToggle<CR>

"syntastic
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 1

let g:syntastic_javascript_checkers = ['eslint']
let g:syntastic_python_checkers = ['flake8']
let g:syntastic_sh_checkers = ['shellcheck']

" devicons
set encoding=utf8
let g:WebDevIconsUnicodeGlyphDoubleWidth = 1
let g:webdevicons_conceal_nerdtree_brackets = 1
let g:WebDevIconsNerdTreeAfterGlyphPadding = ' '

" airline
set laststatus=2
let g:airline_solarized_bg='dark'
let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tmuxline#enabled = 1
if !exists('g:airline_symbols')
	let g:airline_symbols = {}
endif

" ultisnips
let g:UltiSnipsExpandTrigger = "<tab>"
let g:UltiSnipsJumpForwardTrigger = "<c-b>"
let g:UltiSnipsJumpBackwardTrigger = "<c-z>"

" easymotion
let g:EasyMotion_do_mapping = 1
let g:EasyMotion_startofline = 0
map <Leader><Leader>h <Plug>(easymotion-linebackward)
map <Leader><Leader>l <Plug>(easymotion-lineforward)
map / <Plug>(easymotion-sn)
omap / <Plug>(easymotion-tn)
map n <Plug>(easymotion-next)
map N <Plug>(easymotion-prev)

" General
syntax on
set wildmenu
set foldenable
set mouse=a
set colorcolumn=81

" Theme
set t_Co=256
set background=dark
colorscheme solarized
hi Normal ctermbg=none
"highlight OverLength ctermbg=red ctermfg=white
"match OverLength /\%81v.\+/

" Tab
set tabstop=4
set softtabstop=4
set shiftwidth=4
set smartindent
set ai

" Search
set showmatch
set incsearch
set hlsearch

" Line Number
set number
set nuw=6
set relativenumber

" Backspace
set backspace=indent,eol,start

set timeoutlen=500

" Buffer
set hidden

" Mappings

inoremap kj <esc>
inoremap jk <esc>

nnoremap H ^
nnoremap L $

nnoremap _ ddp
nnoremap - ddkP

inoremap <c-d> <esc>ddi
inoremap <c-u> <esc>ui

nnoremap <c-c> viw~
inoremap <c-c> <esc>lviw~i

nnoremap <leader>sv :source ~/.vimrc<CR>
nnoremap <leader>ev :vsplit ~/.vimrc<CR>

nnoremap <leader>w :w<CR>
nnoremap <leader>q :q<CR>
nnoremap <leader>x :tabclose<CR>
nnoremap <leader>e :tabedit<space>
nnoremap <silent> <leader><CR> :nohl<CR>

nnoremap <leader>pp :setlocal paste!<CR>

nnoremap pp Vyp

inoremap <c-h> <esc>:bp<CR>
inoremap <c-l> <esc>:bn<CR>
nnoremap <c-h> :bp<CR>
nnoremap <c-l> :bn<CR>

nnoremap <Up> <NOP>
nnoremap <Down> <NOP>
nnoremap <Left> <NOP>
nnoremap <Right> <NOP>

inoremap <Up> <NOP>
inoremap <Down> <NOP>
inoremap <Left> <NOP>
inoremap <Right> <NOP>

nnoremap <Left> gT
nnoremap <Right> gt

inoremap <Left> <esc>gT
inoremap <Right> <esc>gt

nnoremap <Leader><Left> :tabm<space>-1<CR>
nnoremap <Leader><Right> :tabm<space>+1<CR>

inoremap <Leader><Left> <esc>:tabm<space>-1<CR>i
inoremap <Leader><Right> <esc>:tabm<space>+1<CR>i

" autocommand
autocmd BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$")
	\| exe "normal! g'\"" | endif
